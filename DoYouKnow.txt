<name>
git@github.com:Merkuri/gw45-IVV.git
APCS PD 8
HW #34 -- Gridworld, part 4
2014-04-29

Do You Know?
Set 7
1. There are five methods implemented in Critter : getActors, processActors, 
getMoveLocations, selectMoveLocations, and makeMove
2. There are five actions that every critter does, all corresponding to the 
previous methods. Firstly, it gets a list of actors to process, then processes 
the actors, then generates a set of locations to which they may move, selects 
a move location, and then moves to that location
3.They should not override the getActors method, as the method would have the
exact same use in every single possible critter class, it would only need to be
changed if the environment was changed.
4.One way is the critter could "eat" the actors. Another way is it could simply
move the actors. A third way is that the critter could change the properties of
the actors, color etc.
5.The three methods needed ot make a critter move are: getMoveLocations(), which
returns all possible movements an actor could make. The second method, selectMove-
Locations() selects one of the suitable locations from getMoveLocations. The third
method, makeMove, processes the move and makes it happen.
6.There is no Critter constructor because it inherits the construcotr from Actor
because the class extends Actor. Any instance of critter will just call the super() method and call the constructor of Actor

Do You Know?
Set 8
1. Act would only cause the ChameleonCritter to act the same way if none of the 
methods in critter had been overridden. Since ChameleonCritter overrides process-
Actors and makeMove, act will have a different effect because it calls all the 
methods, and if the methods are different, act will be different as well.
2.The only difference between the move functions of a ChameleonCritter and a 
regular Critter is that the makeMove of a ChameleonCritter will change its
direction to the thing it changed color to. Then it will move identically. Instead
of rewriting code, one can just call super.makeMove.
3.You would modify the makeMove function. Every time the ChameleonCritter moves,
it drops a flower. If and only if it didnt make a move then no flower is dropped.
4.Because it doesnt need to. It gets the actors from the same place.
5.The actor class contains the getLocation method.
6.A Critter can access its own grid by calling the inherited method getGrid(), 
which is contained in actor.
